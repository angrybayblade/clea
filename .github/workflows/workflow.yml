name: main_workflow
on:
  push:
    branches:
      - develop
      - main
  pull_request:
jobs:
  lock_check:
    continue-on-error: False
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: ["3.10.9"]
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - if: matrix.os != 'windows-latest'
      name: Lock check
      run: |
        pip install poetry
        rm -rf poetry.lock
        time poetry lock

  linter_checks:
    continue-on-error: False
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10.9"]
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run:  |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install --user --upgrade setuptools
        pip install tox==4.6.3
    # TODO
    # - name: Security checks
    #   run: |
    #     tox -e bandit
    #     tox -e safety
    - name: Code style check
      run: |
        tox -e black-check
        tox -e isort-check
        tox -e flake8
        # TODO
        # tox -e vulture
        # tox -e darglint
    - name: Static type check
      run: tox -e mypy
    - name: Pylint
      run: tox -e pylint
